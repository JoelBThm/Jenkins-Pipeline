pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                // Example build tool, replace with your actual build tool command
                sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Running Unit and Integration Tests...'
                // Example test command
                sh 'mvn test'
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Running Code Analysis...'
                // Example code analysis tool, replace with your actual tool command
                sh 'mvn sonar:sonar'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Running Security Scan...'
                // Example security scan tool command
                sh 'dependency-check --project myapp --scan ./'
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging...'
                // Example deployment command
                sh 'scp target/myapp.war user@staging-server:/path/to/deploy/'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Run tests in staging environment
                sh 'curl -X GET http://staging-server/test-endpoint'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                // Example deployment command
                sh 'scp target/myapp.war user@prod-server:/path/to/deploy/'
            }
        }
    }

    post {
        always {
            echo 'Sending email notifications...'
            // Email notification step
             mail to: 'dev-team@example.com',
              subject: "Pipeline ${currentBuild.fullDisplayName} finished",
                 body: "Pipeline ${currentBuild.fullDisplayName} finished with status: ${currentBuild.currentResult}"
        }
    }
}
